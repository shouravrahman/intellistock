// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Item {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String   @db.ObjectId
  sku         String   @unique
  barcode     String?
  quantity    Int
  unit        Unit     @relation(fields: [unitId], references: [id])
  unitId      String   @db.ObjectId
  brand       Brand    @relation(fields: [brandId], references: [id])
  brandId     String   @db.ObjectId

  warehouse   Warehouse @relation(fields: [warehouseID], references: [id])
  warehouseID String    @db.ObjectId

  suppliers   Supplier @relation(fields: [suppliersId], references: [id])
  suppliersId String   @db.ObjectId

  buyingPrice             Float
  sellingPrice            Float
  reorderPoint            Int
  location                String?
  imageUrl                String
  weight                  Float?
  dimensions              String?
  taxRate                 Float
  notes                   String?
  TransferStockAdjustment TransferStockAdjustment[]
  AddStockAdjustment      AddStockAdjustment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Supplier {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  phone         String?
  email         String?
  address       String?
  contactPerson String?
  supplierCode  String   @unique
  paymentTerms  String?
  taxID         String?
  notes         String?
  Item          Item[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  items       Item[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Brand {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String   @unique @db.String
  Item      Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Unit {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  abbreviation String
  defaultUnit  Boolean
  Item         Item[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Warehouse {
  id                 String               @id @default(auto()) @map("_id") @db.ObjectId
  title              String
  location           String?
  description        String?
  warehouseType      String
  AddStockAdjustment AddStockAdjustment[]

  TransferStockAdjustment TransferStockAdjustment[]
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  Item                    Item[]
}

model AddStockAdjustment {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  addedStockQuantity Int
  notes              String?

  referenceNumber      String
  warehouse            Warehouse @relation(fields: [receivingWarehouseId], references: [id])
  receivingWarehouseId String    @db.ObjectId

  item      Item     @relation(fields: [itemId], references: [id])
  itemId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TransferStockAdjustment {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  transferStock Int
  notes         String?

  referenceNumber String
  // receivingWarehouse Warehouse @relation(name: "ReceivingWarehouse", fields: [receivingWarehouseId], references: [id])
  // givingWarehouse    Warehouse @relation(name: "GivingWarehouse", fields: [givingWarehouseId], references: [id])

  receivingWarehouseId String @db.ObjectId
  givingWarehouseId    String @db.ObjectId

  item        Item       @relation(fields: [itemId], references: [id])
  itemId      String     @db.ObjectId
  Warehouse   Warehouse? @relation(fields: [warehouseId], references: [id])
  warehouseId String?    @db.ObjectId
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}
